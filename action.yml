name: "Feather City Java Analysis"
description: "Analyzes Java projects and generates visualizations using Feather City"
author: "Feather City Team"

inputs:
  input_dir:
    description: "Directory containing Java source files"
    required: false
    default: "./src"
  metrics:
    description: "Comma-separated list of metrics (e.g., loc,wmc,cloc,iss)"
    required: false
    default: "loc,wmc,iss,cloc,cc,nom,ce,ca,stat"
  pmd_rulesets:
    description: "Comma-separated list of pmd rulesets (e.g., category/java/bestpractices.xml,category/java/design.xml)"
    required: false
    default: "category/java/bestpractices.xml,category/java/design.xml,category/java/errorprone.xml"
  title:
    description: "Title for the visualisation"
    required: false
    default: ""
  project_description:
    description: "Description of the project for the visualisation"
    required: false
    default: ""
  output_dir:
    description: "Output directory for visualization results"
    required: false
    default: "visual"
  theme:
    description: "Visualization theme (light or dark)"
    required: false
    default: "light"
  color_palette:
    description: "Color palette (eg: puBu, magma, oranges)"
    required: false
    default: "puBu"
  treemap_algorithm:
    description: "The treemap algorithm to be used"
    required: false
    default: "squarify"
  map_width:
    description: "The city map width"
    required: false
    default: "1000"
  map_depth:
    description: "The city map depth"
    required: false
    default: "1060"
  show_legend:
    description: "Whether to show the legend or not"
    required: false
    default: "true"
  java_version:
    description: "Java version to use"
    required: false
    default: "8"
  java_distribution:
    description: "Java distribution to use"
    required: false
    default: "adopt"
  python_version:
    description: "Python version to use"
    required: false
    default: "3.12"
  pmd_version:
    description: "PMD version to use"
    required: false
    default: "7.13.0"
  feather_city_version:
    description: "Feather City version to use"
    required: false
    default: "0.1.1b7"

runs:
  using: "composite"
  steps:
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.java_version }}
        distribution: ${{ inputs.java_distribution }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}

    - name: Install PMD
      shell: bash
      run: |
        # Download and extract PMD
        wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F${{ inputs.pmd_version }}/pmd-dist-${{ inputs.pmd_version }}-bin.zip -O pmd.zip
        unzip pmd.zip

        # Make the PMD script executable
        chmod +x ${{ github.workspace }}/pmd-bin-${{ inputs.pmd_version }}/bin/pmd

        # Add PMD to PATH
        echo "${{ github.workspace }}/pmd-bin-${{ inputs.pmd_version }}/bin" >> $GITHUB_PATH

        # Verify installation
        echo "PMD installation path: ${{ github.workspace }}/pmd-bin-${{ inputs.pmd_version }}/bin"
        ls -la ${{ github.workspace }}/pmd-bin-${{ inputs.pmd_version }}/bin

    - name: Install Feather City
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install "feather-city[java]==${{ inputs.feather_city_version }}" \
          --extra-index-url https://pypi.org/simple/ \
          -i https://test.pypi.org/simple/

        # Verify installation
        pip list | grep feather-city
        which feather-city

    - name: Run Feather City CLI
      shell: bash
      run: |
        COMMAND_ARGS=(
          feather-city
          --input '${{ inputs.input_dir }}'
          --language java
        )

        if [[ -n "${{ inputs.title }}" ]]; then
          COMMAND_ARGS+=(--title "${{ inputs.title }}")
        fi

        if [[ -n "${{ inputs.project_description }}" ]]; then
          COMMAND_ARGS+=(--description "${{ inputs.project_description }}")
        fi

        COMMAND_ARGS+=(
          --analyser-args
          --metrics '${{ inputs.metrics }}'
          --rulesets '${{ inputs.pmd_rulesets }}'
        )

        COMMAND_ARGS+=(
          --visualiser-args
          --theme ${{ inputs.theme }}
          --output-dir '${{ inputs.output_dir }}'
          --map-width ${{ inputs.map_width }}
          --map-depth ${{ inputs.map_depth }}
          --treemap-algorithm ${{ inputs.treemap_algorithm }}
          --color-palette ${{ inputs.color_palette }}
          --show-legend ${{ inputs.show_legend }}
        )

        "${COMMAND_ARGS[@]}"

    - name: Upload visualization as artifact
      uses: actions/upload-artifact@v4
      with:
        name: feather-city-visualization
        path: ${{ inputs.output_dir }}

    - name: Summary
      shell: bash
      run: |
        # Create a summary with links to the artifacts
        echo "## Feather City Analysis Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Analysis completed successfully. You can view the results by downloading the 'feather-city-visualization' artifact." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "To view the visualization:" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the artifact" >> $GITHUB_STEP_SUMMARY
        echo "2. Extract the zip file" >> $GITHUB_STEP_SUMMARY
        echo "3. Open \`index.html\` in your browser" >> $GITHUB_STEP_SUMMARY

branding:
  icon: "bar-chart-2"
  color: "blue"
